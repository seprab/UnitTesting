name: Build and test ðŸ˜Ž

on:
  pull_request: {}
  push: { branches: [main] }

env:
  #UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}

jobs:
  #buildForAllSupportedPlatforms:
  #  name: Build for ${{ matrix.targetPlatform }}
  #  runs-on: Ubuntu-20.04
  #  strategy:
  #    fail-fast: false
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 0
  #        lfs: true
  #    - uses: actions/cache@v2
  #      with:
  #        path: Library
  #        key: Library
  #    - uses: game-ci/unity-builder@v2
  #      with:
  #        targetPlatform: StandaloneWindows
  #    - uses: actions/upload-artifact@v2
  #      with:
  #        name: Build
  #        path: build

  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library

      - uses: game-ci/unity-test-runner@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} Test Results

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: artifacts